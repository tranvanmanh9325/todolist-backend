-- T·∫°o schema n·∫øu ch∆∞a t·ªìn t·∫°i
CREATE SCHEMA IF NOT EXISTS todo_schema;

-- ===========================
-- B·∫¢NG NG∆Ø·ªúI D√ôNG & OTP
-- ===========================

-- B·∫£ng users
CREATE TABLE IF NOT EXISTS todo_schema.users (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    avatar VARCHAR(500)          -- c√≥ th·ªÉ null, l∆∞u URL ho·∫∑c base64
);

-- B·∫£ng otps (tham chi·∫øu email ng∆∞·ªùi d√πng)
CREATE TABLE IF NOT EXISTS todo_schema.otps (
    id SERIAL PRIMARY KEY,
    email VARCHAR(255) NOT NULL,
    otp_code VARCHAR(6) NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    expires_at TIMESTAMP NOT NULL,
    FOREIGN KEY (email) REFERENCES todo_schema.users(email) ON DELETE CASCADE
);

-- ===========================
-- B·∫¢NG TASK & TASK_DETAILS
-- ===========================

-- B·∫£ng ch√≠nh: tasks
CREATE TABLE IF NOT EXISTS todo_schema.tasks (
    id SERIAL PRIMARY KEY,
    user_id BIGINT NOT NULL,              -- üîπ li√™n k·∫øt user
    completed BOOLEAN DEFAULT FALSE,
    title VARCHAR(255) NOT NULL,
    description TEXT,                     -- thay cho note
    type VARCHAR(255),                    -- thay cho project
    completed_at TIMESTAMP,               -- th·ªùi ƒëi·ªÉm ho√†n th√†nh
    CONSTRAINT fk_task_user FOREIGN KEY (user_id)
        REFERENCES todo_schema.users(id)
        ON DELETE CASCADE                 -- n·∫øu user b·ªã xo√° th√¨ xo√° lu√¥n task
);

-- B·∫£ng ph·ª•: task_details
CREATE TABLE IF NOT EXISTS todo_schema.task_details (
    id SERIAL PRIMARY KEY,
    task_id BIGINT NOT NULL,
    due_date TIMESTAMP,          -- ng√†y ƒë·∫øn h·∫°n
    time TIMESTAMP,              -- gi·ªù c·ª• th·ªÉ
    duration VARCHAR(50),        -- th·ªùi l∆∞·ª£ng ("30m", "1h", "none")
    repeat VARCHAR(50),          -- l·∫∑p l·∫°i ("daily", "weekly", "monthly", "none")
    priority INTEGER,            -- m·ª©c ∆∞u ti√™n (1=High, 2=Medium, 3=Low, 4=None)
    reminder INTEGER,            -- s·ªë ph√∫t tr∆∞·ªõc s·ª± ki·ªán
    CONSTRAINT fk_task_detail_task FOREIGN KEY (task_id)
        REFERENCES todo_schema.tasks(id)
        ON DELETE CASCADE
);